/*
Problem Statement:
You are given an array coins representing different coin denominations and an integer amount representing a total amount of money. Your task is to find the minimum number of coins needed to make up that amount. If it's not possible to make up the amount, return -1.

Approach and Intuition:

Create a dp array of size (amount + 1) to store the minimum number of coins needed to make each amount from 0 to amount.
Initialize the dp array with a large value (e.g., INT_MAX) except for dp[0], which is set to 0 because no coins are needed to make an amount of 0.
For each coin denomination, iterate through the dp array and update the minimum number of coins needed for each amount starting from the coin's denomination value up to amount.
The minimum number of coins needed to make an amount x can be calculated as dp[x] = min(dp[x], dp[x - coin] + 1) for each coin denomination.
The final result will be in dp[amount], which stores the minimum number of coins needed to make up the given amount.
If dp[amount] remains unchanged (i.e., it is still set to the initial large value), it means that it's not possible to make the given amount using the provided coin denominations. In this case, return -1.
*/



import java.util.Arrays;

public class CoinChange {
    public static int coinChange(int[] coins, int amount) {
        int[] dp = new int[amount + 1];
        Arrays.fill(dp, amount + 1); // Initialize with a value greater than the maximum possible coins needed.
        dp[0] = 0; // 0 coins needed to make amount 0

        for (int coin : coins) {
            for (int x = coin; x <= amount; x++) {
                dp[x] = Math.min(dp[x], dp[x - coin] + 1);
            }
        }

        return dp[amount] > amount ? -1 : dp[amount];
    }

    public static void main(String[] args) {
        int[] coins = {1, 2, 5};
        int amount = 11;

        int minCoins = coinChange(coins, amount);
        if (minCoins == -1) {
            System.out.println("It's not possible to make up the amount.");
        } else {
            System.out.println("Minimum number of coins needed: " + minCoins);
        }
    }
}
